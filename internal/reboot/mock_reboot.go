// Code generated by MockGen. DO NOT EDIT.
// Source: reboot.go
//
// Generated by this command:
//
//	mockgen -source=reboot.go -package=reboot -destination=mock_reboot.go
//
// Package reboot is a generated GoMock package.
package reboot

import (
	reflect "reflect"

	v1alpha1 "github.com/openshift-kni/lifecycle-agent/api/v1alpha1"
	gomock "go.uber.org/mock/gomock"
)

// MockRebootIntf is a mock of RebootIntf interface.
type MockRebootIntf struct {
	ctrl     *gomock.Controller
	recorder *MockRebootIntfMockRecorder
}

// MockRebootIntfMockRecorder is the mock recorder for MockRebootIntf.
type MockRebootIntfMockRecorder struct {
	mock *MockRebootIntf
}

// NewMockRebootIntf creates a new mock instance.
func NewMockRebootIntf(ctrl *gomock.Controller) *MockRebootIntf {
	mock := &MockRebootIntf{ctrl: ctrl}
	mock.recorder = &MockRebootIntfMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRebootIntf) EXPECT() *MockRebootIntfMockRecorder {
	return m.recorder
}

// AutoRollbackIfEnabled mocks base method.
func (m *MockRebootIntf) AutoRollbackIfEnabled(component, msg string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "AutoRollbackIfEnabled", component, msg)
}

// AutoRollbackIfEnabled indicates an expected call of AutoRollbackIfEnabled.
func (mr *MockRebootIntfMockRecorder) AutoRollbackIfEnabled(component, msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AutoRollbackIfEnabled", reflect.TypeOf((*MockRebootIntf)(nil).AutoRollbackIfEnabled), component, msg)
}

// DisableInitMonitor mocks base method.
func (m *MockRebootIntf) DisableInitMonitor() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisableInitMonitor")
	ret0, _ := ret[0].(error)
	return ret0
}

// DisableInitMonitor indicates an expected call of DisableInitMonitor.
func (mr *MockRebootIntfMockRecorder) DisableInitMonitor() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisableInitMonitor", reflect.TypeOf((*MockRebootIntf)(nil).DisableInitMonitor))
}

// InitiateRollback mocks base method.
func (m *MockRebootIntf) InitiateRollback(msg string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InitiateRollback", msg)
	ret0, _ := ret[0].(error)
	return ret0
}

// InitiateRollback indicates an expected call of InitiateRollback.
func (mr *MockRebootIntfMockRecorder) InitiateRollback(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InitiateRollback", reflect.TypeOf((*MockRebootIntf)(nil).InitiateRollback), msg)
}

// IsOrigStaterootBooted mocks base method.
func (m *MockRebootIntf) IsOrigStaterootBooted(ibu *v1alpha1.ImageBasedUpgrade) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsOrigStaterootBooted", ibu)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IsOrigStaterootBooted indicates an expected call of IsOrigStaterootBooted.
func (mr *MockRebootIntfMockRecorder) IsOrigStaterootBooted(ibu any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsOrigStaterootBooted", reflect.TypeOf((*MockRebootIntf)(nil).IsOrigStaterootBooted), ibu)
}

// ReadIBUAutoRollbackConfigFile mocks base method.
func (m *MockRebootIntf) ReadIBUAutoRollbackConfigFile() (*IBUAutoRollbackConfig, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReadIBUAutoRollbackConfigFile")
	ret0, _ := ret[0].(*IBUAutoRollbackConfig)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReadIBUAutoRollbackConfigFile indicates an expected call of ReadIBUAutoRollbackConfigFile.
func (mr *MockRebootIntfMockRecorder) ReadIBUAutoRollbackConfigFile() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReadIBUAutoRollbackConfigFile", reflect.TypeOf((*MockRebootIntf)(nil).ReadIBUAutoRollbackConfigFile))
}

// RebootToNewStateRoot mocks base method.
func (m *MockRebootIntf) RebootToNewStateRoot(rationale string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RebootToNewStateRoot", rationale)
	ret0, _ := ret[0].(error)
	return ret0
}

// RebootToNewStateRoot indicates an expected call of RebootToNewStateRoot.
func (mr *MockRebootIntfMockRecorder) RebootToNewStateRoot(rationale any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RebootToNewStateRoot", reflect.TypeOf((*MockRebootIntf)(nil).RebootToNewStateRoot), rationale)
}

// WriteIBUAutoRollbackConfigFile mocks base method.
func (m *MockRebootIntf) WriteIBUAutoRollbackConfigFile(ibu *v1alpha1.ImageBasedUpgrade) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "WriteIBUAutoRollbackConfigFile", ibu)
	ret0, _ := ret[0].(error)
	return ret0
}

// WriteIBUAutoRollbackConfigFile indicates an expected call of WriteIBUAutoRollbackConfigFile.
func (mr *MockRebootIntfMockRecorder) WriteIBUAutoRollbackConfigFile(ibu any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "WriteIBUAutoRollbackConfigFile", reflect.TypeOf((*MockRebootIntf)(nil).WriteIBUAutoRollbackConfigFile), ibu)
}
