// Code generated by MockGen. DO NOT EDIT.
// Source: ../extramanifest.go
//
// Generated by this command:
//
//	mockgen -source ../extramanifest.go -destination mock_extramanifest.go -write_generate_directive
//
// Package mock_extramanifest is a generated GoMock package.
package mock_extramanifest

import (
	context "context"
	reflect "reflect"

	v1alpha1 "github.com/openshift-kni/lifecycle-agent/api/v1alpha1"
	gomock "go.uber.org/mock/gomock"
)

//go:generate mockgen -source ../extramanifest.go -destination mock_extramanifest.go -write_generate_directive

// MockEManifestHandler is a mock of EManifestHandler interface.
type MockEManifestHandler struct {
	ctrl     *gomock.Controller
	recorder *MockEManifestHandlerMockRecorder
}

// MockEManifestHandlerMockRecorder is the mock recorder for MockEManifestHandler.
type MockEManifestHandlerMockRecorder struct {
	mock *MockEManifestHandler
}

// NewMockEManifestHandler creates a new mock instance.
func NewMockEManifestHandler(ctrl *gomock.Controller) *MockEManifestHandler {
	mock := &MockEManifestHandler{ctrl: ctrl}
	mock.recorder = &MockEManifestHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEManifestHandler) EXPECT() *MockEManifestHandlerMockRecorder {
	return m.recorder
}

// ApplyExtraManifests mocks base method.
func (m *MockEManifestHandler) ApplyExtraManifests(ctx context.Context, fromDir string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ApplyExtraManifests", ctx, fromDir)
	ret0, _ := ret[0].(error)
	return ret0
}

// ApplyExtraManifests indicates an expected call of ApplyExtraManifests.
func (mr *MockEManifestHandlerMockRecorder) ApplyExtraManifests(ctx, fromDir any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ApplyExtraManifests", reflect.TypeOf((*MockEManifestHandler)(nil).ApplyExtraManifests), ctx, fromDir)
}

// ExportExtraManifestToDir mocks base method.
func (m *MockEManifestHandler) ExportExtraManifestToDir(ctx context.Context, extraManifestCMs []v1alpha1.ConfigMapRef, toDir string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExportExtraManifestToDir", ctx, extraManifestCMs, toDir)
	ret0, _ := ret[0].(error)
	return ret0
}

// ExportExtraManifestToDir indicates an expected call of ExportExtraManifestToDir.
func (mr *MockEManifestHandlerMockRecorder) ExportExtraManifestToDir(ctx, extraManifestCMs, toDir any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExportExtraManifestToDir", reflect.TypeOf((*MockEManifestHandler)(nil).ExportExtraManifestToDir), ctx, extraManifestCMs, toDir)
}
